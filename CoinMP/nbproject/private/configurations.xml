<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="95">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name="bin">
      </df>
      <df name="BuildTools">
        <df name="compile_f2c">
        </df>
        <df name="headers">
          <in>configall_system.h</in>
          <in>configall_system_msc.h</in>
        </df>
        <df name="MSVisualStudio">
          <df name="v10">
          </df>
          <df name="v9">
          </df>
        </df>
        <df name="share">
        </df>
      </df>
      <df name="Cbc">
        <df name="doc">
        </df>
        <df name="doxydoc">
        </df>
        <df name="examples">
          <in>CbcBranchFollow2.cpp</in>
          <in>CbcBranchFollow2.hpp</in>
          <in>CbcBranchLink.cpp</in>
          <in>CbcBranchLink.hpp</in>
          <in>CbcBranchUser.cpp</in>
          <in>CbcBranchUser.hpp</in>
          <in>CbcCompareUser.cpp</in>
          <in>CbcCompareUser.hpp</in>
          <in>CbcSolver2.cpp</in>
          <in>CbcSolver2.hpp</in>
          <in>CbcSolver3.cpp</in>
          <in>CbcSolver3.hpp</in>
          <in>CbcSolverLongThin.cpp</in>
          <in>CbcSolverLongThin.hpp</in>
          <in>ClpQuadInterface.cpp</in>
          <in>ClpQuadInterface.hpp</in>
          <in>allCuts.cpp</in>
          <in>barrier.cpp</in>
          <in>cbc_driverC_sos.c</in>
          <in>crew.cpp</in>
          <in>driver.cpp</in>
          <in>driver2.cpp</in>
          <in>driver3.cpp</in>
          <in>driver4.cpp</in>
          <in>fast0507.cpp</in>
          <in>fast0507b.cpp</in>
          <in>gear.cpp</in>
          <in>hotstart.cpp</in>
          <in>interrupt.cpp</in>
          <in>link.cpp</in>
          <in>longthin.cpp</in>
          <in>lotsize.cpp</in>
          <in>minimum.cpp</in>
          <in>modify.cpp</in>
          <in>nway.cpp</in>
          <in>parallel.cpp</in>
          <in>parallel2.cpp</in>
          <in>qmip.cpp</in>
          <in>qmip2.cpp</in>
          <in>repeat.cpp</in>
          <in>sample1.cpp</in>
          <in>sample2.cpp</in>
          <in>sample3.cpp</in>
          <in>sample4.cpp</in>
          <in>sample5.cpp</in>
          <in>simpleBAB.cpp</in>
          <in>sos.cpp</in>
          <in>sudoku.cpp</in>
        </df>
        <df name="MSVisualStudio">
          <df name="v10">
            <df name="cbc">
            </df>
            <df name="cbcCInterfaceDll">
            </df>
            <df name="CbcCSosDllSample">
            </df>
            <df name="cbcExamplesSample2">
            </df>
            <df name="CbcWithInstalledLibraries">
              <in>main.cpp</in>
            </df>
            <df name="libCbc">
            </df>
            <df name="libCbcSolver">
            </df>
            <df name="libOsiCbc">
            </df>
            <df name="OsiCbcUnitTest">
            </df>
          </df>
          <df name="v9">
            <df name="cbc">
            </df>
            <df name="cbcCInterfaceDll">
            </df>
            <df name="cbcCSosDllSample">
            </df>
            <df name="cbcExamplesSample2">
            </df>
            <df name="libCbc">
            </df>
            <df name="libCbcSolver">
            </df>
            <df name="libOsiCbc">
            </df>
            <df name="OsiCbcUnitTest">
            </df>
          </df>
        </df>
        <df name="scripts">
        </df>
        <df name="src">
          <df name="OsiCbc">
            <in>OsiCbcSolverInterface.cpp</in>
            <in>OsiCbcSolverInterface.hpp</in>
          </df>
          <in>CbcBranchActual.hpp</in>
          <in>CbcBranchAllDifferent.cpp</in>
          <in>CbcBranchAllDifferent.hpp</in>
          <in>CbcBranchBase.cpp</in>
          <in>CbcBranchBase.hpp</in>
          <in>CbcBranchCut.cpp</in>
          <in>CbcBranchCut.hpp</in>
          <in>CbcBranchDecision.cpp</in>
          <in>CbcBranchDecision.hpp</in>
          <in>CbcBranchDefaultDecision.cpp</in>
          <in>CbcBranchDefaultDecision.hpp</in>
          <in>CbcBranchDynamic.cpp</in>
          <in>CbcBranchDynamic.hpp</in>
          <in>CbcBranchLotsize.cpp</in>
          <in>CbcBranchLotsize.hpp</in>
          <in>CbcBranchToFixLots.cpp</in>
          <in>CbcBranchToFixLots.hpp</in>
          <in>CbcBranchingObject.cpp</in>
          <in>CbcBranchingObject.hpp</in>
          <in>CbcCbcParam.cpp</in>
          <in>CbcClique.cpp</in>
          <in>CbcClique.hpp</in>
          <in>CbcCompare.hpp</in>
          <in>CbcCompareActual.hpp</in>
          <in>CbcCompareBase.hpp</in>
          <in>CbcCompareDefault.cpp</in>
          <in>CbcCompareDefault.hpp</in>
          <in>CbcCompareDepth.cpp</in>
          <in>CbcCompareDepth.hpp</in>
          <in>CbcCompareEstimate.cpp</in>
          <in>CbcCompareEstimate.hpp</in>
          <in>CbcCompareObjective.cpp</in>
          <in>CbcCompareObjective.hpp</in>
          <in>CbcConfig.h</in>
          <in>CbcConsequence.cpp</in>
          <in>CbcConsequence.hpp</in>
          <in>CbcCountRowCut.cpp</in>
          <in>CbcCountRowCut.hpp</in>
          <in>CbcCutGenerator.cpp</in>
          <in>CbcCutGenerator.hpp</in>
          <in>CbcCutModifier.cpp</in>
          <in>CbcCutModifier.hpp</in>
          <in>CbcCutSubsetModifier.cpp</in>
          <in>CbcCutSubsetModifier.hpp</in>
          <in>CbcDummyBranchingObject.cpp</in>
          <in>CbcDummyBranchingObject.hpp</in>
          <in>CbcEventHandler.cpp</in>
          <in>CbcEventHandler.hpp</in>
          <in>CbcFathom.cpp</in>
          <in>CbcFathom.hpp</in>
          <in>CbcFathomDynamicProgramming.cpp</in>
          <in>CbcFathomDynamicProgramming.hpp</in>
          <in>CbcFeasibilityBase.hpp</in>
          <in>CbcFixVariable.cpp</in>
          <in>CbcFixVariable.hpp</in>
          <in>CbcFollowOn.cpp</in>
          <in>CbcFollowOn.hpp</in>
          <in>CbcFullNodeInfo.cpp</in>
          <in>CbcFullNodeInfo.hpp</in>
          <in>CbcGenBaB.cpp</in>
          <in>CbcGenCbcParam.cpp</in>
          <in>CbcGenCbcParam.hpp</in>
          <in>CbcGenCbcParamUtils.cpp</in>
          <in>CbcGenCtlBlk.cpp</in>
          <in>CbcGenCtlBlk.hpp</in>
          <in>CbcGenMessages.cpp</in>
          <in>CbcGenMessages.hpp</in>
          <in>CbcGenOsiParam.cpp</in>
          <in>CbcGenOsiParam.hpp</in>
          <in>CbcGenOsiParamUtils.cpp</in>
          <in>CbcGenParam.cpp</in>
          <in>CbcGenParam.hpp</in>
          <in>CbcGenParamUtils.cpp</in>
          <in>CbcGenSolution.cpp</in>
          <in>CbcGenSolvers.cpp</in>
          <in>CbcGeneral.cpp</in>
          <in>CbcGeneral.hpp</in>
          <in>CbcGeneralDepth.cpp</in>
          <in>CbcGeneralDepth.hpp</in>
          <in>CbcGeneric.cpp</in>
          <in>CbcHeuristic.cpp</in>
          <in>CbcHeuristic.hpp</in>
          <in>CbcHeuristicDINS.cpp</in>
          <in>CbcHeuristicDINS.hpp</in>
          <in>CbcHeuristicDive.cpp</in>
          <in>CbcHeuristicDive.hpp</in>
          <in>CbcHeuristicDiveCoefficient.cpp</in>
          <in>CbcHeuristicDiveCoefficient.hpp</in>
          <in>CbcHeuristicDiveFractional.cpp</in>
          <in>CbcHeuristicDiveFractional.hpp</in>
          <in>CbcHeuristicDiveGuided.cpp</in>
          <in>CbcHeuristicDiveGuided.hpp</in>
          <in>CbcHeuristicDiveLineSearch.cpp</in>
          <in>CbcHeuristicDiveLineSearch.hpp</in>
          <in>CbcHeuristicDivePseudoCost.cpp</in>
          <in>CbcHeuristicDivePseudoCost.hpp</in>
          <in>CbcHeuristicDiveVectorLength.cpp</in>
          <in>CbcHeuristicDiveVectorLength.hpp</in>
          <in>CbcHeuristicFPump.cpp</in>
          <in>CbcHeuristicFPump.hpp</in>
          <in>CbcHeuristicGreedy.cpp</in>
          <in>CbcHeuristicGreedy.hpp</in>
          <in>CbcHeuristicLocal.cpp</in>
          <in>CbcHeuristicLocal.hpp</in>
          <in>CbcHeuristicPivotAndFix.cpp</in>
          <in>CbcHeuristicPivotAndFix.hpp</in>
          <in>CbcHeuristicRENS.cpp</in>
          <in>CbcHeuristicRENS.hpp</in>
          <in>CbcHeuristicRINS.cpp</in>
          <in>CbcHeuristicRINS.hpp</in>
          <in>CbcHeuristicRandRound.cpp</in>
          <in>CbcHeuristicRandRound.hpp</in>
          <in>CbcHeuristicVND.cpp</in>
          <in>CbcHeuristicVND.hpp</in>
          <in>CbcLinked.cpp</in>
          <in>CbcLinked.hpp</in>
          <in>CbcLinkedUtils.cpp</in>
          <in>CbcMessage.cpp</in>
          <in>CbcMessage.hpp</in>
          <in>CbcMipStartIO.cpp</in>
          <in>CbcMipStartIO.hpp</in>
          <in>CbcModel.cpp</in>
          <in>CbcModel.hpp</in>
          <in>CbcNWay.cpp</in>
          <in>CbcNWay.hpp</in>
          <in>CbcNode.cpp</in>
          <in>CbcNode.hpp</in>
          <in>CbcNodeInfo.cpp</in>
          <in>CbcNodeInfo.hpp</in>
          <in>CbcObject.cpp</in>
          <in>CbcObject.hpp</in>
          <in>CbcObjectUpdateData.cpp</in>
          <in>CbcObjectUpdateData.hpp</in>
          <in>CbcParam.cpp</in>
          <in>CbcParam.hpp</in>
          <in>CbcPartialNodeInfo.cpp</in>
          <in>CbcPartialNodeInfo.hpp</in>
          <in>CbcSOS.cpp</in>
          <in>CbcSOS.hpp</in>
          <in>CbcSimpleInteger.cpp</in>
          <in>CbcSimpleInteger.hpp</in>
          <in>CbcSimpleIntegerDynamicPseudoCost.cpp</in>
          <in>CbcSimpleIntegerDynamicPseudoCost.hpp</in>
          <in>CbcSimpleIntegerPseudoCost.cpp</in>
          <in>CbcSimpleIntegerPseudoCost.hpp</in>
          <in>CbcSolver.cpp</in>
          <in>CbcSolver.hpp</in>
          <in>CbcSolverAnalyze.cpp</in>
          <in>CbcSolverAnalyze.hpp</in>
          <in>CbcSolverExpandKnapsack.cpp</in>
          <in>CbcSolverExpandKnapsack.hpp</in>
          <in>CbcSolverHeuristics.cpp</in>
          <in>CbcSolverHeuristics.hpp</in>
          <in>CbcStatistics.cpp</in>
          <in>CbcStatistics.hpp</in>
          <in>CbcStrategy.cpp</in>
          <in>CbcStrategy.hpp</in>
          <in>CbcSubProblem.cpp</in>
          <in>CbcSubProblem.hpp</in>
          <in>CbcThread.cpp</in>
          <in>CbcThread.hpp</in>
          <in>CbcTree.cpp</in>
          <in>CbcTree.hpp</in>
          <in>CbcTreeLocal.cpp</in>
          <in>CbcTreeLocal.hpp</in>
          <in>Cbc_C_Interface.cpp</in>
          <in>Cbc_C_Interface.h</in>
          <in>Cbc_ampl.cpp</in>
          <in>Cbc_ampl.h</in>
          <in>ClpAmplObjective.hpp</in>
          <in>ClpConstraintAmpl.hpp</in>
          <in>CoinSolve.cpp</in>
          <in>config.h</in>
          <in>config_cbc.h</in>
          <in>config_cbc_default.h</in>
          <in>config_default.h</in>
          <in>unitTest.cpp</in>
          <in>unitTestClp.cpp</in>
        </df>
        <df name="test">
          <in>CInterfaceTest.c</in>
          <in>OsiCbcSolverInterfaceTest.cpp</in>
          <in>gamsTest.cpp</in>
          <in>osiUnitTest.cpp</in>
        </df>
      </df>
      <df name="Cgl">
        <df name="doxydoc">
        </df>
        <df name="examples">
          <in>cgl1.cpp</in>
          <in>cgl_data_test.cpp</in>
        </df>
        <df name="MSVisualStudio">
          <df name="v10">
            <df name="CglUnitTest">
            </df>
            <df name="libCgl">
            </df>
          </df>
          <df name="v9">
            <df name="CglUnitTest">
            </df>
            <df name="libCgl">
            </df>
          </df>
        </df>
        <df name="src">
          <df name="CglAllDifferent">
            <in>CglAllDifferent.cpp</in>
            <in>CglAllDifferent.hpp</in>
          </df>
          <df name="CglClique">
            <in>CglClique.cpp</in>
            <in>CglClique.hpp</in>
            <in>CglCliqueHelper.cpp</in>
            <in>CglCliqueTest.cpp</in>
          </df>
          <df name="CglDuplicateRow">
            <in>CglDuplicateRow.cpp</in>
            <in>CglDuplicateRow.hpp</in>
          </df>
          <df name="CglFlowCover">
            <in>CglFlowCover.cpp</in>
            <in>CglFlowCover.hpp</in>
            <in>CglFlowCoverTest.cpp</in>
          </df>
          <df name="CglGMI">
            <in>CglGMI.cpp</in>
            <in>CglGMI.hpp</in>
            <in>CglGMIParam.cpp</in>
            <in>CglGMIParam.hpp</in>
          </df>
          <df name="CglGomory">
            <in>CglGomory.cpp</in>
            <in>CglGomory.hpp</in>
            <in>CglGomoryTest.cpp</in>
          </df>
          <df name="CglKnapsackCover">
            <in>CglKnapsackCover.cpp</in>
            <in>CglKnapsackCover.hpp</in>
            <in>CglKnapsackCoverTest.cpp</in>
          </df>
          <df name="CglLandP">
            <in>CglLandP.cpp</in>
            <in>CglLandP.hpp</in>
            <in>CglLandPMessages.cpp</in>
            <in>CglLandPMessages.hpp</in>
            <in>CglLandPSimplex.cpp</in>
            <in>CglLandPSimplex.hpp</in>
            <in>CglLandPTabRow.cpp</in>
            <in>CglLandPTabRow.hpp</in>
            <in>CglLandPTest.cpp</in>
            <in>CglLandPUtils.cpp</in>
            <in>CglLandPUtils.hpp</in>
            <in>CglLandPValidator.cpp</in>
            <in>CglLandPValidator.hpp</in>
          </df>
          <df name="CglLiftAndProject">
            <in>CglLiftAndProject.cpp</in>
            <in>CglLiftAndProject.hpp</in>
          </df>
          <df name="CglMixedIntegerRounding">
            <in>CglMixedIntegerRounding.cpp</in>
            <in>CglMixedIntegerRounding.hpp</in>
            <in>CglMixedIntegerRoundingTest.cpp</in>
          </df>
          <df name="CglMixedIntegerRounding2">
            <in>CglMixedIntegerRounding2.cpp</in>
            <in>CglMixedIntegerRounding2.hpp</in>
            <in>CglMixedIntegerRounding2Test.cpp</in>
          </df>
          <df name="CglOddHole">
            <in>CglOddHole.cpp</in>
            <in>CglOddHole.hpp</in>
            <in>CglOddHoleTest.cpp</in>
          </df>
          <df name="CglPreProcess">
            <in>CglPreProcess.cpp</in>
            <in>CglPreProcess.hpp</in>
          </df>
          <df name="CglProbing">
            <in>CglProbing.cpp</in>
            <in>CglProbing.hpp</in>
            <in>CglProbingTest.cpp</in>
          </df>
          <df name="CglRedSplit">
            <in>CglRedSplit.cpp</in>
            <in>CglRedSplit.hpp</in>
            <in>CglRedSplitParam.cpp</in>
            <in>CglRedSplitParam.hpp</in>
            <in>CglRedSplitTest.cpp</in>
          </df>
          <df name="CglRedSplit2">
            <in>CglRedSplit2.cpp</in>
            <in>CglRedSplit2.hpp</in>
            <in>CglRedSplit2Param.cpp</in>
            <in>CglRedSplit2Param.hpp</in>
            <in>CglRedSplit2Test.cpp</in>
          </df>
          <df name="CglResidualCapacity">
            <in>CglResidualCapacity.cpp</in>
            <in>CglResidualCapacity.hpp</in>
            <in>CglResidualCapacityTest.cpp</in>
          </df>
          <df name="CglSimpleRounding">
            <in>CglSimpleRounding.cpp</in>
            <in>CglSimpleRounding.hpp</in>
            <in>CglSimpleRoundingTest.cpp</in>
          </df>
          <df name="CglTwomir">
            <in>CglTwomir.cpp</in>
            <in>CglTwomir.hpp</in>
            <in>CglTwomirTest.cpp</in>
          </df>
          <df name="CglZeroHalf">
            <in>Cgl012cut.cpp</in>
            <in>Cgl012cut.hpp</in>
            <in>CglZeroHalf.cpp</in>
            <in>CglZeroHalf.hpp</in>
            <in>CglZeroHalfTest.cpp</in>
          </df>
          <in>CglConfig.h</in>
          <in>CglCutGenerator.cpp</in>
          <in>CglCutGenerator.hpp</in>
          <in>CglMessage.cpp</in>
          <in>CglMessage.hpp</in>
          <in>CglParam.cpp</in>
          <in>CglParam.hpp</in>
          <in>CglStored.cpp</in>
          <in>CglStored.hpp</in>
          <in>CglTreeInfo.cpp</in>
          <in>CglTreeInfo.hpp</in>
          <in>config.h</in>
          <in>config_cgl.h</in>
          <in>config_cgl_default.h</in>
          <in>config_default.h</in>
        </df>
        <df name="test">
          <df name="CglTestData">
          </df>
          <in>unitTest.cpp</in>
        </df>
      </df>
      <df name="Clp">
        <df name="doc">
          <df name="Howto">
          </df>
        </df>
        <df name="doxydoc">
        </df>
        <df name="examples">
          <in>addBits.cpp</in>
          <in>addColumns.cpp</in>
          <in>addRows.cpp</in>
          <in>decomp2.cpp</in>
          <in>decomp3.cpp</in>
          <in>decompose.cpp</in>
          <in>defaults.cpp</in>
          <in>driver.cpp</in>
          <in>driver2.cpp</in>
          <in>driverC.c</in>
          <in>dualCuts.cpp</in>
          <in>ekk.cpp</in>
          <in>ekk_interface.cpp</in>
          <in>hello.cpp</in>
          <in>makeDual.cpp</in>
          <in>minimum.cpp</in>
          <in>modify.cpp</in>
          <in>myPdco.cpp</in>
          <in>myPdco.hpp</in>
          <in>network.cpp</in>
          <in>pdco.cpp</in>
          <in>piece.cpp</in>
          <in>rowColumn.cpp</in>
          <in>sprint.cpp</in>
          <in>sprint2.cpp</in>
          <in>testBarrier.cpp</in>
          <in>testBasis.cpp</in>
          <in>testGub.cpp</in>
          <in>testGub2.cpp</in>
          <in>testQP.cpp</in>
          <in>useVolume.cpp</in>
        </df>
        <df name="MSVisualStudio">
          <df name="v10">
            <df name="clp">
            </df>
            <df name="ClpExamplesMinimum">
            </df>
            <df name="ClpExamplesTestBarrier">
            </df>
            <df name="ClpExamplesTestQP">
            </df>
            <df name="libClp">
            </df>
            <df name="libOsiClp">
            </df>
            <df name="OsiClpUnitTest">
            </df>
          </df>
          <df name="v9">
            <df name="clp">
            </df>
            <df name="ClpExamplesMinimum">
            </df>
            <df name="ClpExamplesTestBarrier">
            </df>
            <df name="ClpExamplesTestQP">
            </df>
            <df name="libClp">
            </df>
            <df name="libOsiClp">
            </df>
            <df name="OsiClpUnitTest">
            </df>
          </df>
        </df>
        <df name="src">
          <df name="OsiClp">
            <in>OsiClpSolverInterface.cpp</in>
            <in>OsiClpSolverInterface.hpp</in>
          </df>
          <in>AbcCommon.hpp</in>
          <in>AbcDualRowDantzig.cpp</in>
          <in>AbcDualRowDantzig.hpp</in>
          <in>AbcDualRowPivot.cpp</in>
          <in>AbcDualRowPivot.hpp</in>
          <in>AbcDualRowSteepest.cpp</in>
          <in>AbcDualRowSteepest.hpp</in>
          <in>AbcMatrix.cpp</in>
          <in>AbcMatrix.hpp</in>
          <in>AbcNonLinearCost.cpp</in>
          <in>AbcNonLinearCost.hpp</in>
          <in>AbcPrimalColumnDantzig.cpp</in>
          <in>AbcPrimalColumnDantzig.hpp</in>
          <in>AbcPrimalColumnPivot.cpp</in>
          <in>AbcPrimalColumnPivot.hpp</in>
          <in>AbcPrimalColumnSteepest.cpp</in>
          <in>AbcPrimalColumnSteepest.hpp</in>
          <in>AbcSimplex.cpp</in>
          <in>AbcSimplex.hpp</in>
          <in>AbcSimplexDual.cpp</in>
          <in>AbcSimplexDual.hpp</in>
          <in>AbcSimplexFactorization.cpp</in>
          <in>AbcSimplexFactorization.hpp</in>
          <in>AbcSimplexParallel.cpp</in>
          <in>AbcSimplexPrimal.cpp</in>
          <in>AbcSimplexPrimal.hpp</in>
          <in>AbcWarmStart.cpp</in>
          <in>AbcWarmStart.hpp</in>
          <in>CbcOrClpParam.cpp</in>
          <in>CbcOrClpParam.hpp</in>
          <in>ClpCholeskyBase.cpp</in>
          <in>ClpCholeskyBase.hpp</in>
          <in>ClpCholeskyDense.cpp</in>
          <in>ClpCholeskyDense.hpp</in>
          <in>ClpCholeskyMumps.cpp</in>
          <in>ClpCholeskyMumps.hpp</in>
          <in>ClpCholeskyTaucs.cpp</in>
          <in>ClpCholeskyTaucs.hpp</in>
          <in>ClpCholeskyUfl.cpp</in>
          <in>ClpCholeskyUfl.hpp</in>
          <in>ClpCholeskyWssmp.cpp</in>
          <in>ClpCholeskyWssmp.hpp</in>
          <in>ClpCholeskyWssmpKKT.cpp</in>
          <in>ClpCholeskyWssmpKKT.hpp</in>
          <in>ClpConfig.h</in>
          <in>ClpConstraint.cpp</in>
          <in>ClpConstraint.hpp</in>
          <in>ClpConstraintLinear.cpp</in>
          <in>ClpConstraintLinear.hpp</in>
          <in>ClpConstraintQuadratic.cpp</in>
          <in>ClpConstraintQuadratic.hpp</in>
          <in>ClpDualRowDantzig.cpp</in>
          <in>ClpDualRowDantzig.hpp</in>
          <in>ClpDualRowPivot.cpp</in>
          <in>ClpDualRowPivot.hpp</in>
          <in>ClpDualRowSteepest.cpp</in>
          <in>ClpDualRowSteepest.hpp</in>
          <in>ClpDummyMatrix.cpp</in>
          <in>ClpDummyMatrix.hpp</in>
          <in>ClpDynamicExampleMatrix.cpp</in>
          <in>ClpDynamicExampleMatrix.hpp</in>
          <in>ClpDynamicMatrix.cpp</in>
          <in>ClpDynamicMatrix.hpp</in>
          <in>ClpEventHandler.cpp</in>
          <in>ClpEventHandler.hpp</in>
          <in>ClpFactorization.cpp</in>
          <in>ClpFactorization.hpp</in>
          <in>ClpGubDynamicMatrix.cpp</in>
          <in>ClpGubDynamicMatrix.hpp</in>
          <in>ClpGubMatrix.cpp</in>
          <in>ClpGubMatrix.hpp</in>
          <in>ClpHelperFunctions.cpp</in>
          <in>ClpHelperFunctions.hpp</in>
          <in>ClpInterior.cpp</in>
          <in>ClpInterior.hpp</in>
          <in>ClpLinearObjective.cpp</in>
          <in>ClpLinearObjective.hpp</in>
          <in>ClpLsqr.cpp</in>
          <in>ClpLsqr.hpp</in>
          <in>ClpMain.cpp</in>
          <in>ClpMatrixBase.cpp</in>
          <in>ClpMatrixBase.hpp</in>
          <in>ClpMessage.cpp</in>
          <in>ClpMessage.hpp</in>
          <in>ClpModel.cpp</in>
          <in>ClpModel.hpp</in>
          <in>ClpNetworkBasis.cpp</in>
          <in>ClpNetworkBasis.hpp</in>
          <in>ClpNetworkMatrix.cpp</in>
          <in>ClpNetworkMatrix.hpp</in>
          <in>ClpNode.cpp</in>
          <in>ClpNode.hpp</in>
          <in>ClpNonLinearCost.cpp</in>
          <in>ClpNonLinearCost.hpp</in>
          <in>ClpObjective.cpp</in>
          <in>ClpObjective.hpp</in>
          <in>ClpPackedMatrix.cpp</in>
          <in>ClpPackedMatrix.hpp</in>
          <in>ClpParameters.hpp</in>
          <in>ClpPdco.cpp</in>
          <in>ClpPdco.hpp</in>
          <in>ClpPdcoBase.cpp</in>
          <in>ClpPdcoBase.hpp</in>
          <in>ClpPlusMinusOneMatrix.cpp</in>
          <in>ClpPlusMinusOneMatrix.hpp</in>
          <in>ClpPredictorCorrector.cpp</in>
          <in>ClpPredictorCorrector.hpp</in>
          <in>ClpPresolve.cpp</in>
          <in>ClpPresolve.hpp</in>
          <in>ClpPrimalColumnDantzig.cpp</in>
          <in>ClpPrimalColumnDantzig.hpp</in>
          <in>ClpPrimalColumnPivot.cpp</in>
          <in>ClpPrimalColumnPivot.hpp</in>
          <in>ClpPrimalColumnSteepest.cpp</in>
          <in>ClpPrimalColumnSteepest.hpp</in>
          <in>ClpPrimalQuadraticDantzig.hpp</in>
          <in>ClpQuadraticObjective.cpp</in>
          <in>ClpQuadraticObjective.hpp</in>
          <in>ClpSimplex.cpp</in>
          <in>ClpSimplex.hpp</in>
          <in>ClpSimplexDual.cpp</in>
          <in>ClpSimplexDual.hpp</in>
          <in>ClpSimplexNonlinear.cpp</in>
          <in>ClpSimplexNonlinear.hpp</in>
          <in>ClpSimplexOther.cpp</in>
          <in>ClpSimplexOther.hpp</in>
          <in>ClpSimplexPrimal.cpp</in>
          <in>ClpSimplexPrimal.hpp</in>
          <in>ClpSolve.cpp</in>
          <in>ClpSolve.hpp</in>
          <in>Clp_C_Interface.cpp</in>
          <in>Clp_C_Interface.h</in>
          <in>CoinAbcBaseFactorization.hpp</in>
          <in>CoinAbcBaseFactorization1.cpp</in>
          <in>CoinAbcBaseFactorization2.cpp</in>
          <in>CoinAbcBaseFactorization3.cpp</in>
          <in>CoinAbcBaseFactorization4.cpp</in>
          <in>CoinAbcBaseFactorization5.cpp</in>
          <in>CoinAbcCommon.hpp</in>
          <in>CoinAbcCommonFactorization.hpp</in>
          <in>CoinAbcDenseFactorization.cpp</in>
          <in>CoinAbcDenseFactorization.hpp</in>
          <in>CoinAbcFactorization.hpp</in>
          <in>CoinAbcFactorization1.cpp</in>
          <in>CoinAbcFactorization2.cpp</in>
          <in>CoinAbcFactorization3.cpp</in>
          <in>CoinAbcFactorization4.cpp</in>
          <in>CoinAbcFactorization5.cpp</in>
          <in>CoinAbcHelperFunctions.cpp</in>
          <in>CoinAbcHelperFunctions.hpp</in>
          <in>CoinAbcOrderedFactorization1.cpp</in>
          <in>CoinAbcOrderedFactorization2.cpp</in>
          <in>CoinAbcOrderedFactorization3.cpp</in>
          <in>CoinAbcOrderedFactorization4.cpp</in>
          <in>CoinAbcOrderedFactorization5.cpp</in>
          <in>CoinAbcSmallFactorization1.cpp</in>
          <in>CoinAbcSmallFactorization2.cpp</in>
          <in>CoinAbcSmallFactorization3.cpp</in>
          <in>CoinAbcSmallFactorization4.cpp</in>
          <in>CoinAbcSmallFactorization5.cpp</in>
          <in>IdiSolve.cpp</in>
          <in>Idiot.cpp</in>
          <in>Idiot.hpp</in>
          <in>MyEventHandler.cpp</in>
          <in>MyEventHandler.hpp</in>
          <in>MyMessageHandler.cpp</in>
          <in>MyMessageHandler.hpp</in>
          <in>config.h</in>
          <in>config_clp.h</in>
          <in>config_clp_default.h</in>
          <in>config_default.h</in>
          <in>unitTest.cpp</in>
        </df>
        <df name="test">
          <in>OsiClpSolverInterfaceTest.cpp</in>
          <in>osiUnitTest.cpp</in>
        </df>
      </df>
      <df name="CoinMP">
        <df name="examples">
          <df name="csharp">
            <df name="bin">
              <df name="x64">
                <df name="Release">
                </df>
              </df>
              <df name="x86">
                <df name="Release">
                </df>
              </df>
            </df>
            <df name="Properties">
            </df>
          </df>
          <df name="vb6">
          </df>
          <in>example.c</in>
        </df>
        <df name="MSVisualStudio">
          <df name="v9">
            <df name="CoinMP">
              <in>resource.h</in>
            </df>
            <df name="release">
            </df>
            <df name="unitTest">
            </df>
            <df name="x64">
              <df name="Release">
              </df>
            </df>
          </df>
        </df>
        <df name="src">
          <in>CoinCbc.cpp</in>
          <in>CoinCbc.h</in>
          <in>CoinMP.cpp</in>
          <in>CoinMP.h</in>
          <in>CoinMPConfig.h</in>
          <in>CoinOption.c</in>
          <in>CoinOption.h</in>
          <in>CoinProblem.c</in>
          <in>CoinProblem.h</in>
          <in>CoinResult.c</in>
          <in>CoinResult.h</in>
          <in>CoinSolver.c</in>
          <in>CoinSolver.h</in>
          <in>config.h</in>
          <in>config_coinmp.h</in>
          <in>config_coinmp_default.h</in>
        </df>
        <df name="test">
          <in>unitTest.cpp</in>
        </df>
      </df>
      <df name="CoinUtils">
        <df name="doxydoc">
        </df>
        <df name="MSVisualStudio">
          <df name="v10">
            <df name="libCoinUtils">
            </df>
            <df name="unitTestCoinUtils">
            </df>
          </df>
          <df name="v9">
            <df name="libCoinUtils">
            </df>
            <df name="unitTestCoinUtils">
            </df>
          </df>
        </df>
        <df name="src">
          <in>CoinAlloc.cpp</in>
          <in>CoinAlloc.hpp</in>
          <in>CoinBuild.cpp</in>
          <in>CoinBuild.hpp</in>
          <in>CoinDenseFactorization.cpp</in>
          <in>CoinDenseFactorization.hpp</in>
          <in>CoinDenseVector.cpp</in>
          <in>CoinDenseVector.hpp</in>
          <in>CoinDistance.hpp</in>
          <in>CoinError.cpp</in>
          <in>CoinError.hpp</in>
          <in>CoinFactorization.hpp</in>
          <in>CoinFactorization1.cpp</in>
          <in>CoinFactorization2.cpp</in>
          <in>CoinFactorization3.cpp</in>
          <in>CoinFactorization4.cpp</in>
          <in>CoinFileIO.cpp</in>
          <in>CoinFileIO.hpp</in>
          <in>CoinFinite.cpp</in>
          <in>CoinFinite.hpp</in>
          <in>CoinFloatEqual.hpp</in>
          <in>CoinHelperFunctions.hpp</in>
          <in>CoinIndexedVector.cpp</in>
          <in>CoinIndexedVector.hpp</in>
          <in>CoinLpIO.cpp</in>
          <in>CoinLpIO.hpp</in>
          <in>CoinMessage.cpp</in>
          <in>CoinMessage.hpp</in>
          <in>CoinMessageHandler.cpp</in>
          <in>CoinMessageHandler.hpp</in>
          <in>CoinModel.cpp</in>
          <in>CoinModel.hpp</in>
          <in>CoinModelUseful.cpp</in>
          <in>CoinModelUseful.hpp</in>
          <in>CoinModelUseful2.cpp</in>
          <in>CoinMpsIO.cpp</in>
          <in>CoinMpsIO.hpp</in>
          <in>CoinOslC.h</in>
          <in>CoinOslFactorization.cpp</in>
          <in>CoinOslFactorization.hpp</in>
          <in>CoinOslFactorization2.cpp</in>
          <in>CoinOslFactorization3.cpp</in>
          <in>CoinPackedMatrix.cpp</in>
          <in>CoinPackedMatrix.hpp</in>
          <in>CoinPackedVector.cpp</in>
          <in>CoinPackedVector.hpp</in>
          <in>CoinPackedVectorBase.cpp</in>
          <in>CoinPackedVectorBase.hpp</in>
          <in>CoinParam.cpp</in>
          <in>CoinParam.hpp</in>
          <in>CoinParamUtils.cpp</in>
          <in>CoinPostsolveMatrix.cpp</in>
          <in>CoinPragma.hpp</in>
          <in>CoinPrePostsolveMatrix.cpp</in>
          <in>CoinPresolveDoubleton.cpp</in>
          <in>CoinPresolveDoubleton.hpp</in>
          <in>CoinPresolveDual.cpp</in>
          <in>CoinPresolveDual.hpp</in>
          <in>CoinPresolveDupcol.cpp</in>
          <in>CoinPresolveDupcol.hpp</in>
          <in>CoinPresolveEmpty.cpp</in>
          <in>CoinPresolveEmpty.hpp</in>
          <in>CoinPresolveFixed.cpp</in>
          <in>CoinPresolveFixed.hpp</in>
          <in>CoinPresolveForcing.cpp</in>
          <in>CoinPresolveForcing.hpp</in>
          <in>CoinPresolveHelperFunctions.cpp</in>
          <in>CoinPresolveImpliedFree.cpp</in>
          <in>CoinPresolveImpliedFree.hpp</in>
          <in>CoinPresolveIsolated.cpp</in>
          <in>CoinPresolveIsolated.hpp</in>
          <in>CoinPresolveMatrix.cpp</in>
          <in>CoinPresolveMatrix.hpp</in>
          <in>CoinPresolveMonitor.cpp</in>
          <in>CoinPresolveMonitor.hpp</in>
          <in>CoinPresolvePsdebug.cpp</in>
          <in>CoinPresolvePsdebug.hpp</in>
          <in>CoinPresolveSingleton.cpp</in>
          <in>CoinPresolveSingleton.hpp</in>
          <in>CoinPresolveSubst.cpp</in>
          <in>CoinPresolveSubst.hpp</in>
          <in>CoinPresolveTighten.cpp</in>
          <in>CoinPresolveTighten.hpp</in>
          <in>CoinPresolveTripleton.cpp</in>
          <in>CoinPresolveTripleton.hpp</in>
          <in>CoinPresolveUseless.cpp</in>
          <in>CoinPresolveUseless.hpp</in>
          <in>CoinPresolveZeros.cpp</in>
          <in>CoinPresolveZeros.hpp</in>
          <in>CoinSearchTree.cpp</in>
          <in>CoinSearchTree.hpp</in>
          <in>CoinShallowPackedVector.cpp</in>
          <in>CoinShallowPackedVector.hpp</in>
          <in>CoinSignal.hpp</in>
          <in>CoinSimpFactorization.cpp</in>
          <in>CoinSimpFactorization.hpp</in>
          <in>CoinSmartPtr.hpp</in>
          <in>CoinSnapshot.cpp</in>
          <in>CoinSnapshot.hpp</in>
          <in>CoinSort.hpp</in>
          <in>CoinStructuredModel.cpp</in>
          <in>CoinStructuredModel.hpp</in>
          <in>CoinTime.hpp</in>
          <in>CoinTypes.hpp</in>
          <in>CoinUtility.hpp</in>
          <in>CoinUtilsConfig.h</in>
          <in>CoinWarmStart.hpp</in>
          <in>CoinWarmStartBasis.cpp</in>
          <in>CoinWarmStartBasis.hpp</in>
          <in>CoinWarmStartDual.cpp</in>
          <in>CoinWarmStartDual.hpp</in>
          <in>CoinWarmStartPrimalDual.cpp</in>
          <in>CoinWarmStartPrimalDual.hpp</in>
          <in>CoinWarmStartVector.cpp</in>
          <in>CoinWarmStartVector.hpp</in>
          <in>Coin_C_defines.h</in>
          <in>config.h</in>
          <in>config_coinutils.h</in>
          <in>config_coinutils_default.h</in>
          <in>config_default.h</in>
        </df>
        <df name="test">
          <in>CoinDenseVectorTest.cpp</in>
          <in>CoinErrorTest.cpp</in>
          <in>CoinIndexedVectorTest.cpp</in>
          <in>CoinLpIOTest.cpp</in>
          <in>CoinMessageHandlerTest.cpp</in>
          <in>CoinModelTest.cpp</in>
          <in>CoinMpsIOTest.cpp</in>
          <in>CoinPackedMatrixTest.cpp</in>
          <in>CoinPackedVectorTest.cpp</in>
          <in>CoinShallowPackedVectorTest.cpp</in>
          <in>plan.mod</in>
          <in>unitTest.cpp</in>
        </df>
      </df>
      <df name="Data">
        <df name="Sample">
        </df>
      </df>
      <df name="include">
        <df name="coin">
          <in>CbcBranchActual.hpp</in>
          <in>CbcBranchAllDifferent.hpp</in>
          <in>CbcBranchBase.hpp</in>
          <in>CbcBranchCut.hpp</in>
          <in>CbcBranchDecision.hpp</in>
          <in>CbcBranchDefaultDecision.hpp</in>
          <in>CbcBranchDynamic.hpp</in>
          <in>CbcBranchLotsize.hpp</in>
          <in>CbcBranchToFixLots.hpp</in>
          <in>CbcBranchingObject.hpp</in>
          <in>CbcClique.hpp</in>
          <in>CbcCompare.hpp</in>
          <in>CbcCompareActual.hpp</in>
          <in>CbcCompareBase.hpp</in>
          <in>CbcCompareDefault.hpp</in>
          <in>CbcCompareDepth.hpp</in>
          <in>CbcCompareEstimate.hpp</in>
          <in>CbcCompareObjective.hpp</in>
          <in>CbcConfig.h</in>
          <in>CbcConsequence.hpp</in>
          <in>CbcCountRowCut.hpp</in>
          <in>CbcCutGenerator.hpp</in>
          <in>CbcCutModifier.hpp</in>
          <in>CbcCutSubsetModifier.hpp</in>
          <in>CbcDummyBranchingObject.hpp</in>
          <in>CbcEventHandler.hpp</in>
          <in>CbcFathom.hpp</in>
          <in>CbcFathomDynamicProgramming.hpp</in>
          <in>CbcFeasibilityBase.hpp</in>
          <in>CbcFixVariable.hpp</in>
          <in>CbcFollowOn.hpp</in>
          <in>CbcFullNodeInfo.hpp</in>
          <in>CbcGeneral.hpp</in>
          <in>CbcGeneralDepth.hpp</in>
          <in>CbcHeuristic.hpp</in>
          <in>CbcHeuristicDINS.hpp</in>
          <in>CbcHeuristicDive.hpp</in>
          <in>CbcHeuristicDiveCoefficient.hpp</in>
          <in>CbcHeuristicDiveFractional.hpp</in>
          <in>CbcHeuristicDiveGuided.hpp</in>
          <in>CbcHeuristicDiveLineSearch.hpp</in>
          <in>CbcHeuristicDivePseudoCost.hpp</in>
          <in>CbcHeuristicDiveVectorLength.hpp</in>
          <in>CbcHeuristicFPump.hpp</in>
          <in>CbcHeuristicGreedy.hpp</in>
          <in>CbcHeuristicLocal.hpp</in>
          <in>CbcHeuristicPivotAndFix.hpp</in>
          <in>CbcHeuristicRENS.hpp</in>
          <in>CbcHeuristicRINS.hpp</in>
          <in>CbcHeuristicRandRound.hpp</in>
          <in>CbcHeuristicVND.hpp</in>
          <in>CbcLinked.hpp</in>
          <in>CbcMessage.hpp</in>
          <in>CbcMipStartIO.hpp</in>
          <in>CbcModel.hpp</in>
          <in>CbcNWay.hpp</in>
          <in>CbcNode.hpp</in>
          <in>CbcNodeInfo.hpp</in>
          <in>CbcObject.hpp</in>
          <in>CbcObjectUpdateData.hpp</in>
          <in>CbcOrClpParam.cpp</in>
          <in>CbcOrClpParam.hpp</in>
          <in>CbcPartialNodeInfo.hpp</in>
          <in>CbcSOS.hpp</in>
          <in>CbcSimpleInteger.hpp</in>
          <in>CbcSimpleIntegerDynamicPseudoCost.hpp</in>
          <in>CbcSimpleIntegerPseudoCost.hpp</in>
          <in>CbcSolver.hpp</in>
          <in>CbcStrategy.hpp</in>
          <in>CbcSubProblem.hpp</in>
          <in>CbcTree.hpp</in>
          <in>CbcTreeLocal.hpp</in>
          <in>Cbc_C_Interface.h</in>
          <in>Cgl012cut.hpp</in>
          <in>CglAllDifferent.hpp</in>
          <in>CglClique.hpp</in>
          <in>CglConfig.h</in>
          <in>CglCutGenerator.hpp</in>
          <in>CglDuplicateRow.hpp</in>
          <in>CglFlowCover.hpp</in>
          <in>CglGMI.hpp</in>
          <in>CglGMIParam.hpp</in>
          <in>CglGomory.hpp</in>
          <in>CglKnapsackCover.hpp</in>
          <in>CglLandP.hpp</in>
          <in>CglLandPValidator.hpp</in>
          <in>CglLiftAndProject.hpp</in>
          <in>CglMessage.hpp</in>
          <in>CglMixedIntegerRounding.hpp</in>
          <in>CglMixedIntegerRounding2.hpp</in>
          <in>CglOddHole.hpp</in>
          <in>CglParam.hpp</in>
          <in>CglPreProcess.hpp</in>
          <in>CglProbing.hpp</in>
          <in>CglRedSplit.hpp</in>
          <in>CglRedSplit2.hpp</in>
          <in>CglRedSplit2Param.hpp</in>
          <in>CglRedSplitParam.hpp</in>
          <in>CglResidualCapacity.hpp</in>
          <in>CglSimpleRounding.hpp</in>
          <in>CglStored.hpp</in>
          <in>CglTreeInfo.hpp</in>
          <in>CglTwomir.hpp</in>
          <in>CglZeroHalf.hpp</in>
          <in>ClpAmplObjective.hpp</in>
          <in>ClpCholeskyBase.hpp</in>
          <in>ClpCholeskyDense.hpp</in>
          <in>ClpConfig.h</in>
          <in>ClpConstraint.hpp</in>
          <in>ClpConstraintAmpl.hpp</in>
          <in>ClpConstraintLinear.hpp</in>
          <in>ClpConstraintQuadratic.hpp</in>
          <in>ClpDualRowDantzig.hpp</in>
          <in>ClpDualRowPivot.hpp</in>
          <in>ClpDualRowSteepest.hpp</in>
          <in>ClpDummyMatrix.hpp</in>
          <in>ClpDynamicExampleMatrix.hpp</in>
          <in>ClpDynamicMatrix.hpp</in>
          <in>ClpEventHandler.hpp</in>
          <in>ClpFactorization.hpp</in>
          <in>ClpGubDynamicMatrix.hpp</in>
          <in>ClpGubMatrix.hpp</in>
          <in>ClpInterior.hpp</in>
          <in>ClpLinearObjective.hpp</in>
          <in>ClpMatrixBase.hpp</in>
          <in>ClpMessage.hpp</in>
          <in>ClpModel.hpp</in>
          <in>ClpNetworkMatrix.hpp</in>
          <in>ClpNode.hpp</in>
          <in>ClpNonLinearCost.hpp</in>
          <in>ClpObjective.hpp</in>
          <in>ClpPackedMatrix.hpp</in>
          <in>ClpParameters.hpp</in>
          <in>ClpPdcoBase.hpp</in>
          <in>ClpPlusMinusOneMatrix.hpp</in>
          <in>ClpPresolve.hpp</in>
          <in>ClpPrimalColumnDantzig.hpp</in>
          <in>ClpPrimalColumnPivot.hpp</in>
          <in>ClpPrimalColumnSteepest.hpp</in>
          <in>ClpQuadraticObjective.hpp</in>
          <in>ClpSimplex.hpp</in>
          <in>ClpSimplexDual.hpp</in>
          <in>ClpSimplexNonlinear.hpp</in>
          <in>ClpSimplexOther.hpp</in>
          <in>ClpSimplexPrimal.hpp</in>
          <in>ClpSolve.hpp</in>
          <in>Clp_C_Interface.h</in>
          <in>CoinAlloc.hpp</in>
          <in>CoinBuild.hpp</in>
          <in>CoinDenseFactorization.hpp</in>
          <in>CoinDenseVector.hpp</in>
          <in>CoinDistance.hpp</in>
          <in>CoinError.hpp</in>
          <in>CoinFactorization.hpp</in>
          <in>CoinFileIO.hpp</in>
          <in>CoinFinite.hpp</in>
          <in>CoinFloatEqual.hpp</in>
          <in>CoinHelperFunctions.hpp</in>
          <in>CoinIndexedVector.hpp</in>
          <in>CoinLpIO.hpp</in>
          <in>CoinMP.h</in>
          <in>CoinMPConfig.h</in>
          <in>CoinMessage.hpp</in>
          <in>CoinMessageHandler.hpp</in>
          <in>CoinModel.hpp</in>
          <in>CoinModelUseful.hpp</in>
          <in>CoinMpsIO.hpp</in>
          <in>CoinOslFactorization.hpp</in>
          <in>CoinPackedMatrix.hpp</in>
          <in>CoinPackedVector.hpp</in>
          <in>CoinPackedVectorBase.hpp</in>
          <in>CoinParam.hpp</in>
          <in>CoinPragma.hpp</in>
          <in>CoinPresolveDoubleton.hpp</in>
          <in>CoinPresolveDual.hpp</in>
          <in>CoinPresolveDupcol.hpp</in>
          <in>CoinPresolveEmpty.hpp</in>
          <in>CoinPresolveFixed.hpp</in>
          <in>CoinPresolveForcing.hpp</in>
          <in>CoinPresolveImpliedFree.hpp</in>
          <in>CoinPresolveIsolated.hpp</in>
          <in>CoinPresolveMatrix.hpp</in>
          <in>CoinPresolveMonitor.hpp</in>
          <in>CoinPresolvePsdebug.hpp</in>
          <in>CoinPresolveSingleton.hpp</in>
          <in>CoinPresolveSubst.hpp</in>
          <in>CoinPresolveTighten.hpp</in>
          <in>CoinPresolveTripleton.hpp</in>
          <in>CoinPresolveUseless.hpp</in>
          <in>CoinPresolveZeros.hpp</in>
          <in>CoinSearchTree.hpp</in>
          <in>CoinShallowPackedVector.hpp</in>
          <in>CoinSignal.hpp</in>
          <in>CoinSimpFactorization.hpp</in>
          <in>CoinSmartPtr.hpp</in>
          <in>CoinSnapshot.hpp</in>
          <in>CoinSort.hpp</in>
          <in>CoinStructuredModel.hpp</in>
          <in>CoinTime.hpp</in>
          <in>CoinTypes.hpp</in>
          <in>CoinUtility.hpp</in>
          <in>CoinUtilsConfig.h</in>
          <in>CoinWarmStart.hpp</in>
          <in>CoinWarmStartBasis.hpp</in>
          <in>CoinWarmStartDual.hpp</in>
          <in>CoinWarmStartPrimalDual.hpp</in>
          <in>CoinWarmStartVector.hpp</in>
          <in>Coin_C_defines.h</in>
          <in>Idiot.hpp</in>
          <in>OsiAuxInfo.hpp</in>
          <in>OsiBranchingObject.hpp</in>
          <in>OsiCbcSolverInterface.hpp</in>
          <in>OsiChooseVariable.hpp</in>
          <in>OsiClpSolverInterface.hpp</in>
          <in>OsiColCut.hpp</in>
          <in>OsiCollections.hpp</in>
          <in>OsiConfig.h</in>
          <in>OsiCut.hpp</in>
          <in>OsiCuts.hpp</in>
          <in>OsiPresolve.hpp</in>
          <in>OsiRowCut.hpp</in>
          <in>OsiRowCutDebugger.hpp</in>
          <in>OsiSolverBranch.hpp</in>
          <in>OsiSolverInterface.hpp</in>
          <in>OsiSolverParameters.hpp</in>
          <in>OsiUnitTests.hpp</in>
        </df>
      </df>
      <df name="lib">
        <df name="pkgconfig">
        </df>
      </df>
      <df name="Osi">
        <df name="doxydoc">
        </df>
        <df name="examples">
          <in>basic.cpp</in>
          <in>build.cpp</in>
          <in>opbdp_solve.cpp</in>
          <in>opbdp_solve.hpp</in>
          <in>parameters.cpp</in>
          <in>query.cpp</in>
          <in>readconic.cpp</in>
        </df>
        <df name="MSVisualStudio">
          <df name="v10">
            <df name="libOsi">
            </df>
            <df name="libOsiCommonTest">
            </df>
            <df name="OsiExamplesBasic">
            </df>
            <df name="OsiExamplesBuild">
            </df>
            <df name="OsiExamplesParameters">
            </df>
            <df name="OsiExamplesQuery">
            </df>
            <df name="OsiExamplesSpecific">
            </df>
            <df name="OsiUnitTest">
            </df>
          </df>
          <df name="v9">
            <df name="libOsi">
            </df>
            <df name="libOsiCommonTest">
            </df>
            <df name="OsiExamplesBasic">
            </df>
            <df name="OsiExamplesBuild">
            </df>
            <df name="OsiExamplesParameters">
            </df>
            <df name="OsiExamplesQuery">
            </df>
            <df name="OsiExamplesSpecific">
            </df>
            <df name="OsiUnitTest">
            </df>
          </df>
        </df>
        <df name="src">
          <df name="Osi">
            <in>OsiAuxInfo.cpp</in>
            <in>OsiAuxInfo.hpp</in>
            <in>OsiBranchingObject.cpp</in>
            <in>OsiBranchingObject.hpp</in>
            <in>OsiChooseVariable.cpp</in>
            <in>OsiChooseVariable.hpp</in>
            <in>OsiColCut.cpp</in>
            <in>OsiColCut.hpp</in>
            <in>OsiCollections.hpp</in>
            <in>OsiConfig.h</in>
            <in>OsiCut.cpp</in>
            <in>OsiCut.hpp</in>
            <in>OsiCuts.cpp</in>
            <in>OsiCuts.hpp</in>
            <in>OsiNames.cpp</in>
            <in>OsiPresolve.cpp</in>
            <in>OsiPresolve.hpp</in>
            <in>OsiRowCut.cpp</in>
            <in>OsiRowCut.hpp</in>
            <in>OsiRowCutDebugger.cpp</in>
            <in>OsiRowCutDebugger.hpp</in>
            <in>OsiSolverBranch.cpp</in>
            <in>OsiSolverBranch.hpp</in>
            <in>OsiSolverInterface.cpp</in>
            <in>OsiSolverInterface.hpp</in>
            <in>OsiSolverParameters.hpp</in>
            <in>config.h</in>
            <in>config_default.h</in>
            <in>config_osi.h</in>
            <in>config_osi_default.h</in>
          </df>
          <df name="OsiCommonTest">
            <in>OsiColCutTest.cpp</in>
            <in>OsiCutsTest.cpp</in>
            <in>OsiNetlibTest.cpp</in>
            <in>OsiRowCutDebuggerTest.cpp</in>
            <in>OsiRowCutTest.cpp</in>
            <in>OsiSimplexAPITest.cpp</in>
            <in>OsiSolverInterfaceTest.cpp</in>
            <in>OsiUnitTestUtils.cpp</in>
            <in>OsiUnitTests.hpp</in>
          </df>
          <df name="OsiCpx">
            <in>OsiCpxSolverInterface.cpp</in>
            <in>OsiCpxSolverInterface.hpp</in>
          </df>
          <df name="OsiGlpk">
            <in>OsiGlpkSolverInterface.cpp</in>
            <in>OsiGlpkSolverInterface.hpp</in>
          </df>
          <df name="OsiGrb">
            <in>OsiGrbSolverInterface.cpp</in>
            <in>OsiGrbSolverInterface.hpp</in>
          </df>
          <df name="OsiMsk">
            <in>OsiMskSolverInterface.cpp</in>
            <in>OsiMskSolverInterface.hpp</in>
          </df>
          <df name="OsiSpx">
            <in>OsiSpxSolverInterface.cpp</in>
            <in>OsiSpxSolverInterface.hpp</in>
          </df>
          <df name="OsiXpr">
            <in>OsiXprSolverInterface.cpp</in>
            <in>OsiXprSolverInterface.hpp</in>
          </df>
        </df>
        <df name="test">
          <in>OsiCpxSolverInterfaceTest.cpp</in>
          <in>OsiGlpkSolverInterfaceTest.cpp</in>
          <in>OsiGrbSolverInterfaceTest.cpp</in>
          <in>OsiMskSolverInterfaceTest.cpp</in>
          <in>OsiSpxSolverInterfaceTest.cpp</in>
          <in>OsiTestSolver.cpp</in>
          <in>OsiTestSolver.hpp</in>
          <in>OsiTestSolverInterface.cpp</in>
          <in>OsiTestSolverInterface.hpp</in>
          <in>OsiTestSolverInterfaceIO.cpp</in>
          <in>OsiTestSolverInterfaceTest.cpp</in>
          <in>OsiXprSolverInterfaceTest.cpp</in>
          <in>unitTest.cpp</in>
        </df>
      </df>
      <df name="share">
        <df name="coin">
          <df name="Data">
            <df name="Sample">
            </df>
          </df>
          <df name="doc">
            <df name="Cbc">
            </df>
            <df name="Cgl">
            </df>
            <df name="Clp">
            </df>
            <df name="CoinMP">
              <in>example.c</in>
            </df>
            <df name="CoinUtils">
            </df>
            <df name="Osi">
            </df>
          </df>
        </df>
      </df>
    </df>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
